# Configuration for running GitHub actions
#  based on EXT:enetcache: .github/workflows/tests.yml
#    https://github.com/lolli42/enetcache/blob/master/.github/workflows/tests.yml
#  see https://docs.github.com/en/actions/guides/setting-up-continuous-integration-using-workflow-templates

name: CI

on:
  push:
  pull_request:
  schedule:
    - cron:  '42 5 * * *'

jobs:

  static:
    name: "static analysis"
    runs-on: ubuntu-20.04
    strategy:
      # This prevents cancellation of matrix job runs, if one/two already failed and let the
      # rest matrix jobs be be executed anyway.
      fail-fast: false
      matrix:
        php: [ '7.4' ]
        typo3version: [ '^10.4' ]
        minMax: [ 'composerInstallMax' ]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Set Typo3 core version"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -c "${{ matrix.typo3version }}" -s composerCoreVersion

      - name: "Composer"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s ${{ matrix.minMax }}

      - name: "cgl"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s cgl -v -n

      - name: "Composer validate"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s composerValidate

      - name: "Lint PHP"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s lint

      - name: "phpstan"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s phpstan -e "-c ../Build/phpstan.neon"

  unit:
    name: "Unit tests"
    runs-on: ubuntu-20.04
    strategy:
      # This prevents cancellation of matrix job runs, if one/two already failed and let the
      # rest matrix jobs be be executed anyway.
      fail-fast: false
      matrix:
        php: [ '7.2', '7.3', '7.4' ]
        typo3version: [ '^10.4' ]
        minMax: [ 'composerInstallMin', 'composerInstallMax' ]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Set Typo3 core version"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -c "${{ matrix.typo3version }}" -s composerCoreVersion

      - name: "Composer"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s ${{ matrix.minMax }}

      - name: "Unit tests"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s unit

  functional:
    name: "Functional tests"
    runs-on: ubuntu-20.04
    strategy:
      # This prevents cancellation of matrix job runs, if one/two already failed and let the
      # rest matrix jobs be be executed anyway.
      fail-fast: false
      matrix:
        php: [ '7.2', '7.3', '7.4' ]
        typo3version: [ '^10.4']
        minMax: [ 'composerInstallMin', 'composerInstallMax' ]
        #db: [ 'mariadb', 'mssql', 'postgres', 'sqlite' ]
        db: [ 'mariadb' ]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Set Typo3 core version"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -c "${{ matrix.typo3version }}" -s composerCoreVersion

      - name: "Composer"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -s ${{ matrix.minMax }}

      - name: "Functional tests with ${{ matrix.db }}"
        run: Build/Scripts/runTests.sh -p ${{ matrix.php }} -d ${{ matrix.db }} -s functional
